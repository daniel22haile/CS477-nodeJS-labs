let book = [];
module.exports = class Book {
    constructor(id, title, isbn, publishedDate, author) {
        this.id = id;
        this.title = title;
        this.isbn = isbn;
        this.publishedDate = publishedDate;
        this.author = author;
    }
    static getAll() {
        return book;
    }

    save() {
        this.id = Math.random().toString(); //normally, id is generated by DB, but not always
        book.push(this);
        return this;
    }

    static getBookById(bookId) {
        return book.find(boo => boo.id === bookId);
    }

    update() {
        const index = book.findIndex(b => b.id === this.id); //we found the index of the book id
        if (index > -1) {
            book.splice(index, 1, this)
            return this;
        } else {
            throw new Error('NOT Found');
        }
    }
    static deleteById(bookId) {
        const index = book.findIndex(p => p.id === bookId);
        if (index > -1) {
            book = book.filter(p => p.id !== bookId);
        } else {
            throw new Error('Not Found!');
        }

    }

    static findById(bookId) {
        const index = book.findIndex(p => p.id === bookId);
        if (index > -1) {
            return book[index];
        } else {
            throw new Error('Not Found!');
        }
    }

}